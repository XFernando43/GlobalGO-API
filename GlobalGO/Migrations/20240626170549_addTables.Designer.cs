// <auto-generated />
using System;
using GlobalGO.data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GlobalGO.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240626170549_addTables")]
    partial class addTables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GlobalGO.models.Carruseles", b =>
                {
                    b.Property<int>("idCarrusel")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idCarrusel"));

                    b.Property<int>("idModelo")
                        .HasColumnType("int");

                    b.Property<string>("imagen")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("modeloidModelo")
                        .HasColumnType("int");

                    b.Property<string>("texto1")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("texto2")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("titulo")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("idCarrusel");

                    b.HasIndex("modeloidModelo");

                    b.ToTable("Carruseles");
                });

            modelBuilder.Entity("GlobalGO.models.Categorias", b =>
                {
                    b.Property<int>("idCategoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idCategoria"));

                    b.Property<string>("categoria")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("icono")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("idModelo")
                        .HasColumnType("int");

                    b.Property<int>("modeloidModelo")
                        .HasColumnType("int");

                    b.HasKey("idCategoria");

                    b.HasIndex("modeloidModelo");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("GlobalGO.models.Colores", b =>
                {
                    b.Property<int>("idColor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idColor"));

                    b.Property<string>("color")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("icono")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("idModelo")
                        .HasColumnType("int");

                    b.HasKey("idColor");

                    b.HasIndex("idModelo");

                    b.ToTable("Colores");
                });

            modelBuilder.Entity("GlobalGO.models.DistribuidorMotos", b =>
                {
                    b.Property<int>("idDealerMoto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idDealerMoto"));

                    b.Property<int>("distribuidoridDistribuidor")
                        .HasColumnType("int");

                    b.Property<int>("idDistribuidor")
                        .HasColumnType("int");

                    b.Property<int>("idModelo")
                        .HasColumnType("int");

                    b.Property<int>("modeloidModelo")
                        .HasColumnType("int");

                    b.HasKey("idDealerMoto");

                    b.HasIndex("distribuidoridDistribuidor");

                    b.HasIndex("modeloidModelo");

                    b.ToTable("DistribuidorMotos");
                });

            modelBuilder.Entity("GlobalGO.models.Distribuidores", b =>
                {
                    b.Property<int>("idDistribuidor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idDistribuidor"));

                    b.Property<string>("direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("distribuidor")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("latitud")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("longitud")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("idDistribuidor");

                    b.ToTable("Distribuidores");
                });

            modelBuilder.Entity("GlobalGO.models.Especificaciones", b =>
                {
                    b.Property<int>("idEspecificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idEspecificacion"));

                    b.Property<string>("alto")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ancho")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("anio")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("autonomia")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("carga")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("cilindrada")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("combustible")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("freno_delantero")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("freno_posterior")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("idModelo")
                        .HasColumnType("int");

                    b.Property<string>("imagen")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("largo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("modeloidModelo")
                        .HasColumnType("int");

                    b.Property<string>("peso")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("potencia")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("rendimiento")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("suspension_delantero")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("suspension_posterior")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("tanque")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("torque")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("transmision")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("velocidad")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("idEspecificacion");

                    b.HasIndex("modeloidModelo");

                    b.ToTable("Especificaciones");
                });

            modelBuilder.Entity("GlobalGO.models.Galerias", b =>
                {
                    b.Property<int>("idGaleria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idGaleria"));

                    b.Property<int>("idModelo")
                        .HasColumnType("int");

                    b.Property<string>("imagen")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("modeloidModelo")
                        .HasColumnType("int");

                    b.HasKey("idGaleria");

                    b.HasIndex("modeloidModelo");

                    b.ToTable("Galerias");
                });

            modelBuilder.Entity("GlobalGO.models.Marcas", b =>
                {
                    b.Property<int>("idMarca")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idMarca"));

                    b.Property<string>("logo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("marca")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("rgb")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("nvarchar(7)");

                    b.HasKey("idMarca");

                    b.ToTable("Marcas");
                });

            modelBuilder.Entity("GlobalGO.models.Modelos", b =>
                {
                    b.Property<int>("idModelo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idModelo"));

                    b.Property<int>("idMarca")
                        .HasColumnType("int");

                    b.Property<string>("logo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("modelo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("rgb")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("nvarchar(7)");

                    b.Property<string>("slogan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("texto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("video")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("idModelo");

                    b.HasIndex("idMarca");

                    b.ToTable("Modelos");
                });

            modelBuilder.Entity("GlobalGO.models.Precios", b =>
                {
                    b.Property<int>("idPrecio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idPrecio"));

                    b.Property<DateTime>("fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("idModelo")
                        .HasColumnType("int");

                    b.Property<int>("modeloidModelo")
                        .HasColumnType("int");

                    b.Property<decimal>("precio")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("idPrecio");

                    b.HasIndex("modeloidModelo");

                    b.ToTable("Precios");
                });

            modelBuilder.Entity("GlobalGO.models.Carruseles", b =>
                {
                    b.HasOne("GlobalGO.models.Modelos", "modelo")
                        .WithMany("carruseles")
                        .HasForeignKey("modeloidModelo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("modelo");
                });

            modelBuilder.Entity("GlobalGO.models.Categorias", b =>
                {
                    b.HasOne("GlobalGO.models.Modelos", "modelo")
                        .WithMany("categorias")
                        .HasForeignKey("modeloidModelo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("modelo");
                });

            modelBuilder.Entity("GlobalGO.models.Colores", b =>
                {
                    b.HasOne("GlobalGO.models.Modelos", "modelo")
                        .WithMany("colores")
                        .HasForeignKey("idModelo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("modelo");
                });

            modelBuilder.Entity("GlobalGO.models.DistribuidorMotos", b =>
                {
                    b.HasOne("GlobalGO.models.Distribuidores", "distribuidor")
                        .WithMany("distribuidoresMotos")
                        .HasForeignKey("distribuidoridDistribuidor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GlobalGO.models.Modelos", "modelo")
                        .WithMany("distribuidoresMotos")
                        .HasForeignKey("modeloidModelo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("distribuidor");

                    b.Navigation("modelo");
                });

            modelBuilder.Entity("GlobalGO.models.Especificaciones", b =>
                {
                    b.HasOne("GlobalGO.models.Modelos", "modelo")
                        .WithMany("especificaciones")
                        .HasForeignKey("modeloidModelo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("modelo");
                });

            modelBuilder.Entity("GlobalGO.models.Galerias", b =>
                {
                    b.HasOne("GlobalGO.models.Modelos", "modelo")
                        .WithMany("galerias")
                        .HasForeignKey("modeloidModelo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("modelo");
                });

            modelBuilder.Entity("GlobalGO.models.Modelos", b =>
                {
                    b.HasOne("GlobalGO.models.Marcas", "marca")
                        .WithMany("modelos")
                        .HasForeignKey("idMarca")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("marca");
                });

            modelBuilder.Entity("GlobalGO.models.Precios", b =>
                {
                    b.HasOne("GlobalGO.models.Modelos", "modelo")
                        .WithMany("precios")
                        .HasForeignKey("modeloidModelo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("modelo");
                });

            modelBuilder.Entity("GlobalGO.models.Distribuidores", b =>
                {
                    b.Navigation("distribuidoresMotos");
                });

            modelBuilder.Entity("GlobalGO.models.Marcas", b =>
                {
                    b.Navigation("modelos");
                });

            modelBuilder.Entity("GlobalGO.models.Modelos", b =>
                {
                    b.Navigation("carruseles");

                    b.Navigation("categorias");

                    b.Navigation("colores");

                    b.Navigation("distribuidoresMotos");

                    b.Navigation("especificaciones");

                    b.Navigation("galerias");

                    b.Navigation("precios");
                });
#pragma warning restore 612, 618
        }
    }
}
